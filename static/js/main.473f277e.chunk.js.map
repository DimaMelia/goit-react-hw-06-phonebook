{"version":3,"sources":["Components/Container/Container.module.css","Components/Filter/Filter.module.css","Components/ContactListItem/ContactListItem.module.css","redux/phone-actions.js","Components/Form/ContactForm.js","Components/Container/Container.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/phonebook-reducer.js","redux/store.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","phoneActions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","findContacts","connect","dispatch","onSubmit","useState","contact","setContact","onInputChange","e","target","value","className","s","form","preventDefault","alert","label","input","type","onChange","button","Container","title","children","container","ContactListItem","onDelete","onClick","getVisibleContacts","contacts","filter","normFilter","toLowerCase","includes","state","phonebook","items","map","App","createReducer","_","combineReducers","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.473f277e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Ir2q\",\"title\":\"Container_title__X6sXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__lwHGj\",\"input\":\"Filter_input__2q567\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__PMBL2\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('phoneBook/addContact', (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('phonebook/deleteContact');\r\n\r\nconst findContacts = createAction('phonebook/filterChange');\r\n\r\nconst phoneActions = { addContact, deleteContact, findContacts };\r\n\r\nexport default phoneActions;\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport phoneActions from '../../redux/phone-actions';\r\nimport s from './Form.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [contact, setContact] = useState({name: '', number: '' });\r\n\r\n  const onInputChange = e => {\r\n    const { name, value } = e.target;\r\n    setContact({ ...contact, [name]: value });\r\n  };\r\n\r\n  const reset = () => setContact({name: '', number: '' });\r\n\r\n  const onAddContact = e => {\r\n    e.preventDefault();\r\n    if (contact.name === '' || contact.number === ''){\r\n      alert('Enter name and number');\r\n      return;\r\n    }\r\n    onSubmit(contact);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onAddContact}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={contact.name}\r\n          onChange={onInputChange}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={contact.number}\r\n          onChange={onInputChange}\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({name, number}) => dispatch(phoneActions.addContact(name,number))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import s from './Container.module.css';\r\n\r\nfunction Container({ title, children }) {\r\n  return (\r\n    <section className={s.container}>\r\n      <h1 className={s.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import s from './ContactListItem.module.css';\r\n\r\nfunction ContactListItem({ id, name, number, onDelete }) {\r\n  return (\r\n    <li>\r\n      {name}: {number}\r\n      <button className={s.button} type=\"button\" onClick={() => onDelete(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ContactListItem;\r\n","import { connect } from 'react-redux';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport phoneActions from '../../redux/phone-actions';\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul>\r\n      {contacts?.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDelete={onDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst getVisibleContacts = (contacts, filter) => {\r\n  const normFilter = filter.toLowerCase()\r\n  return contacts.filter(\r\n    contact => contact.name.toLowerCase().includes(normFilter)\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getVisibleContacts(state.phonebook.items, state.phonebook.filter)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (id) => dispatch(phoneActions.deleteContact(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { connect } from 'react-redux';\r\nimport s from './Filter.module.css';\r\nimport phoneActions from '../../redux/phone-actions';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.phonebook.filter\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: (e) => dispatch(phoneActions.findContacts(e.target.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\nimport './App.css';\nimport ContactForm from './Components/Form/ContactForm';\nimport Container from './Components/Container/Container';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nfunction App() {\n  // const [contacts, setContacts] = useState(\n  //   JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  // );\n  // const [contactFilter, setFilter] = useState('');\n\n  // useEffect(() => {\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // const onFormSubmit = (addedContact, generatedId) => {\n  //   if (addedContact.name.trim() === '' && addedContact.number.trim() === '') {\n  //     alert(`Enter contact name and number`);\n  //     return;\n  //   }\n  //   if (contacts.find(contact => contact.name === addedContact.name)) {\n  //     alert(`${addedContact.name} is already in contacts`);\n  //     return;\n  //   } else {\n  //     setContacts([...contacts, { ...addedContact, id: generatedId }]);\n  //   }\n  // };\n\n  // const onFilterChange = e => {\n  //   setFilter(e.target.value);\n  // };\n\n  // const onDeleteContact = id => {\n  //   setContacts(contacts.filter(contact => contact.id !== id) ?? []);\n  // };\n\n  // const visibleContacts = () => {\n  //   const normFilter = contactFilter.toLowerCase();\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normFilter),\n  //   );\n  // };\n\n  return (\n    <Container title=\"Phonebook\">\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport phoneActions from './phone-actions';\r\n\r\nconst items = createReducer([], {\r\n  [phoneActions.addContact]: (state, { payload }) => [payload, ...state],\r\n  [phoneActions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [payload, ...state];\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst filter = createReducer('', {\r\n  [phoneActions.findContacts]: (_, { payload }) => payload,\r\n});\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.CHANGEFILTER:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","\r\nimport phonebookReducer from './phonebook-reducer';\r\nimport {configureStore} from '@reduxjs/toolkit';\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        phonebook: phonebookReducer,\r\n    },\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3a8uR\",\"label\":\"Form_label__3mflh\",\"input\":\"Form_input__2vDKM\",\"button\":\"Form_button__1h4aF\"};"],"sourceRoot":""}